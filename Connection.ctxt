#BlueJ class context
comment0.params=serverName\ port
comment0.target=Connection(java.lang.String,\ int)
comment0.text=\ \r\n\ Es\ wird\ eine\ Verbindung\ zum\ durch\ IP-Adresse\ und\ Portnummer\ angegebenen\r\n\ \ Server\ aufgebaut,\ so\ dass\ Daten\ gesendet\ und\ empfangen\ werden\ k\uFFFDnnen.\r\n
comment1.params=socket
comment1.target=Connection(java.net.Socket)
comment10.params=
comment10.target=int\ getLocalPort()
comment11.params=
comment11.target=void\ close()
comment12.params=
comment12.target=java.net.Socket\ verbindungsSocket()
comment2.params=
comment2.target=java.lang.String\ connect()
comment3.params=
comment3.target=java.lang.String\ receive()
comment3.text=\ \r\n\ Es\ wird\ auf\ eine\ eingehende\ Nachricht\ vom\ Server\ gewartet\ und\ diese\r\n\ Nachricht\ zur\uFFFDckgegeben,\ wobei\ der\ vom\ Server\ angeh\uFFFDngte\ Zeilentrenner\r\n\ entfernt\ wird.\ W\uFFFDhrend\ des\ Wartens\ ist\ der\ ausf\uFFFDhrende\ Prozess\ blockiert.\r\n
comment4.params=nachricht
comment4.target=void\ send(java.lang.String)
comment4.text=\ \r\n\ Die\ angegebene\ Nachricht\ pMessage\ wird\ -\ um\ einen\ Zeilentrenner\ erweitert\ -\r\n\ an\ den\ Server\ versandt.\r\n
comment5.params=
comment5.target=boolean\ isConnected()
comment6.params=
comment6.target=boolean\ isClosed()
comment7.params=
comment7.target=java.lang.String\ getRemoteIP()
comment8.params=
comment8.target=java.lang.String\ getLocalIP()
comment9.params=
comment9.target=int\ getRemotePort()
numComments=13
